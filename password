
public class liMirz {
    public static void main(String[] args) {
        boolean isValid = validation("jhhhhh6!");
        System.out.print(isValid);
    }



    //Validation
    static boolean validation(String password) {
        boolean areThereSymbols = containSymbols(password);
        boolean areThereSmallLetters = containSmallLetters(password);
        boolean areThereCapitalLetters = containCapitalLetters(password);
        boolean areThereDigits = containDigits(password);
        boolean isMinimumLength = isMinLength(password, 6);
        boolean isMaximumLength = isMaxLength(password, 32);
        boolean valid = false;
        if (areThereSymbols == true && areThereSymbols == areThereSmallLetters && areThereCapitalLetters == areThereDigits && isMinimumLength == isMaximumLength) {
            valid = true;
        }
        return valid;
    }



    //containSymbols
    static boolean containSymbols(String password) {
        String passwordWithoutDigits = password.replaceAll("[0-9]", "");
        String passwordWithoutDigitsLowerCase = passwordWithoutDigits.toLowerCase();
        String passwordWithoutDigitsUpperCase = passwordWithoutDigits.toUpperCase();
        char[] passwordWithoutDigitsLowerCaseArray = passwordWithoutDigitsLowerCase.toCharArray();
        char[] passwordWithoutDigitsUpperCaseArray = passwordWithoutDigitsUpperCase.toCharArray();
        boolean containSymbols = false;
        for (int i = 0; i < passwordWithoutDigitsLowerCaseArray.length; i++) {
            for (int j = 0; j < passwordWithoutDigitsUpperCaseArray.length; j++) {
                if (passwordWithoutDigitsLowerCaseArray[i] == passwordWithoutDigitsUpperCaseArray[j]) {
                    containSymbols = true;
                    break;
                }
            }
        }
        return containSymbols;
    }



    // containSmallLetters
    static boolean containSmallLetters(String password) {
        boolean containSmallLetters = true;
        String passwordUpperCase = password.toUpperCase();
        if (password == passwordUpperCase) {
            containSmallLetters = false;
        }
        return containSmallLetters;
    }



    // containCapitalLetters
    static boolean containCapitalLetters(String password) {
        boolean containCapitalLetters = true;
        String passwordLowerCase = password.toLowerCase();
        if (password == passwordLowerCase) {
            containCapitalLetters = false;
        }
        return containCapitalLetters;
    }



    //containDigits
    static boolean containDigits(String password) {
        char[] digitsArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
        boolean thereAreDigits = false;
        for (int i = 0; i < digitsArray.length; i++) {
            if (password.contains(String.valueOf(digitsArray[i]))) {
                thereAreDigits = true;
                break;
            }
        }
        return (thereAreDigits);
    }



    // minLength
    static boolean isMinLength(String password, int minLegth) {
        char[] passwordChar = password.toCharArray();
        boolean isMinLength = false;
        if (passwordChar.length >= minLegth) {
            isMinLength = true;
        }
        return (isMinLength);
    }



    // maxLength
    static boolean isMaxLength(String password, int maxLength) {
        char[] passwordChar = password.toCharArray();
        boolean isMaxLength = false;
        if (passwordChar.length <= maxLength) {
            isMaxLength = true;
        }
        return (isMaxLength);
    }
}
